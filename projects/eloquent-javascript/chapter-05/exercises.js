// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

const { characterScript } = require("./helpers");

function flatten(array) {
  return array.reduce((flat, current) => flat.concat(current), []);
};

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(start, test, update, body) {
  for (let value = start; test(value); value = update(value)) {
    body(value);
  }
};

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, predicate) {
  for (let element of array) {
    if (!predicate(element)) return false;
  }
  return true;
};

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(str) {
  // create arrays to store ltr and rtl
  let ltr = [];
  let rtl = [];

  for (let i = 0;  i < str.length; i++) {
    let script = characterScript(str.charCodeAt(i));

    if (script !== null) {
      if (script.direction === 'ltr') {
        ltr.push(script);
      } else if (script.direction === 'rtl') {
        rtl.push(script);
      }
    }
  }
  if (ltr.length > rtl.length) {
    return 'ltr';
  } else {
    return 'rtl';
  }
};

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
